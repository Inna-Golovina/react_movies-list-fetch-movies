{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","url","fetch","then","response","ok","Error","status","statusText","json","FindMovie","addMovie","useState","setTitle","error","setError","newMovie","setNewMovie","onSubmit","e","preventDefault","htmlFor","type","value","id","placeholder","classNames","onChange","target","trim","onClick","imdbID","Title","Plot","Poster","App","data","setMovies","find","currentMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.058ff1f6.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.css';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.css';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = `http://www.omdbapi.com/?apikey=1a5efd02&t=`;\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n\nexport const getMovie = title => request(`${title}`);\n","import React, { useState } from 'react';\nimport './FindMovie.css';\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n  const [newMovie, setNewMovie] = useState(null);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n\n    setTitle(value.trim());\n    setError(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  const clearInput = () => {\n    setTitle('');\n    setError(false);\n    setNewMovie(null);\n  };\n\n  const findMovie = () => {\n    getMovie(title)\n      .then((movie) => {\n        if (movie.imdbID) {\n          setNewMovie({\n            title: movie.Title,\n            description: movie.Plot,\n            imgUrl: movie.Poster,\n            imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n            imdbId: movie.imdbID,\n          });\n        } else {\n          setError(true);\n          setNewMovie(null);\n        }\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              value={title}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input is-primary', {\n                'is-danger': error,\n              })}\n              onChange={handleChange}\n            />\n          </div>\n\n          {error && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => findMovie()}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (newMovie) {\n                  addMovie(newMovie);\n                  clearInput();\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {newMovie && (\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard {...newMovie} />\n      </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (movie) => {\n    const sameFilm = movies.find(\n      currentMovie => currentMovie.imdbId === movie.imdbId,\n    );\n\n    if (sameFilm) {\n      return;\n    }\n\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}